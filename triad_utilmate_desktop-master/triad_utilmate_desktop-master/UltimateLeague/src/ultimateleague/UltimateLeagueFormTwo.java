/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ultimateleague;

import java.io.*;
import java.sql.*;
import javax.swing.*;

/**
 *
 * @author Mary
 */
public class UltimateLeagueFormTwo extends javax.swing.JFrame {

    /**
     * Creates new form UltimateLeagueFormTwo
     */
    
    JTable table;
    
    public UltimateLeagueFormTwo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 340));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Welcome to the Season! Click to generate your new team!");
        jLabel1.setToolTipText("Click to generate balanced team!");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 0, 370, 15);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Passing Yards");
        jLabel2.setToolTipText("Click to view passing yards");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 240, 100, 15);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Passing Completions");
        jLabel4.setToolTipText("Click to view passing scores");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 260, 150, 17);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Receiving Yards");
        jLabel5.setToolTipText("Click to view receiving yards");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel5);
        jLabel5.setBounds(340, 240, 110, 15);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Receiving Completions");
        jLabel6.setToolTipText("Click to view receiving completions");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6);
        jLabel6.setBounds(320, 260, 160, 17);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Scores");
        jLabel8.setToolTipText("Click to view passing scores and receiving scores");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel8);
        jLabel8.setBounds(210, 250, 50, 17);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ultimateleague/HubbaBubba.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 490, 280);

        jMenu1.setText("Menu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, 0));
        jMenuItem1.setText("Links");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
       new UltimateLeagueFormThree().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        final String DB_URL = "jdbc:mysql://192.111.147.77:3306/ultimate_league";
        
        try{//try to connect to the database
           Connection connection = DriverManager.getConnection(DB_URL, "triad_ultimate", "a29me46DF4m8bcc");
           
           System.out.println("Connection established.");
           try{//try to create a statement on the connection
               Statement statement = connection.createStatement();
               System.out.println("Statement created.");
               
               //write SQL commands
               String selectAll = "select Players.Player_ID, First_Name, Last_Name, PassingYards_Number from Players inner join Stats on Players.Player_ID = Stats.Player_ID";
               
               //retrieve data from the table and print it
               ResultSet result = statement.executeQuery(selectAll);
               ResultSetMetaData metaData = result.getMetaData();
               int numberOfColumns = metaData.getColumnCount();
               
               
               try{
               File file = new File("D:\\PassingYards.txt");
               file.createNewFile();
                   FileWriter fw = new FileWriter(file.getAbsoluteFile());
                   BufferedWriter bw = new BufferedWriter(fw);
               
                          for (int i = 1; i <= numberOfColumns; i++)
                              bw.write(metaData.getColumnName(i) + "\t\t");
            
                bw.newLine();
            
               while(result.next())
               {
                   
                    int id = result.getInt("PLAYER_ID");
                   int passingYards = result.getInt("PASSINGYARDS_Number");
                   String firstName = result.getString("FIRST_NAME");
                   String lastName = result.getString("LAST_NAME");
                                      
                   for(int index = 0; index < 1; index++){
                   bw.write(id + "\t\t\t" + firstName + "\t\t\t" + lastName + "\t\t\t" + passingYards);
                   bw.newLine();
                   }
                    
               }bw.close();
               }
               catch(IOException e)
                       {
                           System.out.println(e);
                       }
           }catch(SQLException ex)
            {
                System.out.println(ex);
            }
           
        }catch(SQLException ex)
        {
            System.out.println("Connection failed");
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        final String DB_URL = "jdbc:mysql://192.111.147.77:3306/ultimate_league";
        
        try{//try to connect to the database
           Connection connection = DriverManager.getConnection(DB_URL, "triad_ultimate", "a29me46DF4m8bcc");
           
           System.out.println("Connection established.");
           
           try{//try to create a statement on the connection
               Statement statement = connection.createStatement();
               System.out.println("Statement created.");
               
               //write SQL commands
               String selectAll = "select Players.Player_ID, First_Name, Last_Name, PassingCompletions_Number from Players inner join Stats on Players.Player_ID = Stats.Player_ID";
               
               //retrieve data from the table and print it
               ResultSet result = statement.executeQuery(selectAll);
               ResultSetMetaData metaData = result.getMetaData();
               int numberOfColumns = metaData.getColumnCount();
               
               
               try{
               File file = new File("D:\\PassingCompletions.txt");
               file.createNewFile();
                   FileWriter fw = new FileWriter(file.getAbsoluteFile());
                   BufferedWriter bw = new BufferedWriter(fw);
               
                          for (int i = 1; i <= numberOfColumns; i++)
                              bw.write(metaData.getColumnName(i) + "\t");
            
                //System.out.printf("%-8s\t", metaData.getColumnName(i));
                bw.newLine();
            
               while(result.next())
               {
                   
                    int id = result.getInt("PLAYER_ID");
                   int passingCompletions = result.getInt("PASSINGCOMPLETIONS_Number");
                   String firstName = result.getString("FIRST_NAME");
                   String lastName = result.getString("LAST_NAME");
                   
                   for(int index = 0; index < 1; index++){
                   bw.write(id + "\t\t\t" + firstName + "\t\t\t" + lastName + "\t\t\t" + passingCompletions);
                   bw.newLine();
                   }
                    //System.out.println(result.getInt("Player_ID"));// + result.getInt("PassingYARDS_number"));// + "\t" + result.getInt(1));
               }bw.close();
               }
               catch(IOException e)
                       {
                           System.out.println(e);
                       }/*
            for (int i = 1; i <= numberOfColumns; i++)
            {
                System.out.printf("%-8s\t", metaData.getColumnName(i));
                
            }
               while(result.next())
               {
                    int id = result.getInt("PLAYER_ID");
                   int passingCompletions = result.getInt("PASSINGCOMPLETIONS_Number");
                   System.out.println();
                   System.out.println(id + "\t\t" + passingCompletions);
                    //System.out.println(result.getInt("Player_ID"));// + result.getInt("PassingYARDS_number"));// + "\t" + result.getInt(1));
               }
              */ 
           }catch(SQLException ex)
            {
                System.out.println(ex);
            }
        }catch(SQLException ex)
        {
            System.out.println("Connection failed");
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        final String DB_URL = "jdbc:mysql://192.111.147.77:3306/ultimate_league";
        
        try{//try to connect to the database
           Connection connection = DriverManager.getConnection(DB_URL, "triad_ultimate", "a29me46DF4m8bcc");
           
           System.out.println("Connection established.");
           try{//try to create a statement on the connection
               Statement statement = connection.createStatement();
               System.out.println("Statement created.");
               
               //write SQL commands
               String selectAll = "select Players.Player_ID, First_Name, Last_Name, ReceivingYards from Players inner join Stats on Players.Player_ID = Stats.Player_ID";
               
               //retrieve data from the table and print it
               ResultSet result = statement.executeQuery(selectAll);
               ResultSetMetaData metaData = result.getMetaData();
               int numberOfColumns = metaData.getColumnCount();
               
               
               try{
               File file = new File("D:\\ReceivingYards.txt");
               file.createNewFile();
                   FileWriter fw = new FileWriter(file.getAbsoluteFile());
                   BufferedWriter bw = new BufferedWriter(fw);
               
                          for (int i = 1; i <= numberOfColumns; i++)
                              bw.write(metaData.getColumnName(i) + "\t");
            
                bw.newLine();
            
               while(result.next())
               {
                   
                    int id = result.getInt("PLAYER_ID");
                   int receivingYards = result.getInt("RECEIVINGYARDS");
                   String firstName = result.getString("FIRST_NAME");
                   String lastName = result.getString("LAST_NAME");
                   
                   for(int index = 0; index < 1; index++){
                   bw.write(id + "\t\t\t" + firstName + "\t\t\t" + lastName + "\t\t\t" + receivingYards);
                   bw.newLine();
                   }
                    
               }bw.close();
               }
               catch(IOException e)
                       {
                           System.out.println(e);
                       }
           }catch(SQLException ex)
            {
                System.out.println(ex);
            }
           
        }catch(SQLException ex)
        {
            System.out.println("Connection failed");
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        final String DB_URL = "jdbc:mysql://192.111.147.77:3306/ultimate_league";
        
        try{//try to connect to the database
           Connection connection = DriverManager.getConnection(DB_URL, "triad_ultimate", "a29me46DF4m8bcc");
           
           System.out.println("Connection established.");
           try{//try to create a statement on the connection
               Statement statement = connection.createStatement();
               System.out.println("Statement created.");
               
               //write SQL commands
               String selectAll = "select Players.Player_ID, First_Name, Last_Name, ReceivingCompletion from Players inner join Stats on Players.Player_ID = Stats.Player_ID";
               
               //retrieve data from the table and print it
               ResultSet result = statement.executeQuery(selectAll);
               ResultSetMetaData metaData = result.getMetaData();
               int numberOfColumns = metaData.getColumnCount();
               
               
               try{
               File file = new File("D:\\ReceivingCompletion.txt");
               file.createNewFile();
                   FileWriter fw = new FileWriter(file.getAbsoluteFile());
                   BufferedWriter bw = new BufferedWriter(fw);
               
                          for (int i = 1; i <= numberOfColumns; i++)
                              bw.write(metaData.getColumnName(i) + "\t");
            
                bw.newLine();
            
               while(result.next())
               {
                   
                    int id = result.getInt("PLAYER_ID");
                   int receivingCompletions = result.getInt("ReceivingCompletion");
                   String firstName = result.getString("FIRST_NAME");
                   String lastName = result.getString("LAST_NAME");
                   
                   for(int index = 0; index < 1; index++){
                   bw.write(id + "\t\t\t" + firstName + "\t\t\t" + lastName + "\t\t\t" + receivingCompletions);
                   bw.newLine();
                   }
                    
               }bw.close();
               }
               catch(IOException e)
                       {
                           System.out.println(e);
                       }
           }catch(SQLException ex)
            {
                System.out.println(ex);
            }
           
        }catch(SQLException ex)
        {
            System.out.println("Connection failed");
        }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        final String DB_URL = "jdbc:mysql://192.111.147.77:3306/ultimate_league";
        
        try{//try to connect to the database
           Connection connection = DriverManager.getConnection(DB_URL, "triad_ultimate", "a29me46DF4m8bcc");
           
           System.out.println("Connection established.");
           try{//try to create a statement on the connection
               Statement statement = connection.createStatement();
               System.out.println("Statement created.");
               
               //write SQL commands
               String selectAll = "select Players.Player_ID, First_Name, Last_Name, PassingScores, ReceivingScores from Players inner join Stats on Players.Player_ID = Stats.Player_ID";
               
               //retrieve data from the table and print it
               ResultSet result = statement.executeQuery(selectAll);
               ResultSetMetaData metaData = result.getMetaData();
               int numberOfColumns = metaData.getColumnCount();
               
               
               try{
               File file = new File("D:\\Scores.txt");
               file.createNewFile();
                   FileWriter fw = new FileWriter(file.getAbsoluteFile());
                   BufferedWriter bw = new BufferedWriter(fw);
               
                          for (int i = 1; i <= numberOfColumns; i++)
                              bw.write(metaData.getColumnName(i) + "\t\t");
            
                bw.newLine();
            
               while(result.next())
               {
                   
                    int id = result.getInt("PLAYER_ID");
                    int passingScores = result.getInt("PASSINGSCORES");
                   int receivingScores = result.getInt("RECEIVINGSCORES");
                   String firstName = result.getString("FIRST_NAME");
                   String lastName = result.getString("LAST_NAME");
                   
                   for(int index = 0; index < 1; index++){
                   bw.write(id + "\t\t\t" + firstName + "\t\t\t" + lastName + "\t\t\t" + passingScores + "\t\t\t" + receivingScores);
                   bw.newLine();
                   }
                    
               }bw.close();
               }
               catch(IOException e)
                       {
                           System.out.println(e);
                       }
           }catch(SQLException ex)
            {
                System.out.println(ex);
            }
           
        }catch(SQLException ex)
        {
            System.out.println("Connection failed");
        }
    }//GEN-LAST:event_jLabel8MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UltimateLeagueFormTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UltimateLeagueFormTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UltimateLeagueFormTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UltimateLeagueFormTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UltimateLeagueFormTwo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
}
